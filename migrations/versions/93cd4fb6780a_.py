"""empty message

Revision ID: 93cd4fb6780a
Revises: f7664d991f83
Create Date: 2018-06-16 21:50:58.433971

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '93cd4fb6780a'
down_revision = 'f7664d991f83'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('material_forecasts', 'consumption_plan_item_id')
    op.drop_column('places', 'titleDE')
    op.add_column('shopping_order_items', sa.Column('inventory_id', sa.Integer(), nullable=True))
    op.add_column('shopping_order_items', sa.Column('quantity_purchased', sa.Float(), nullable=True))
    op.add_column('shopping_order_items', sa.Column('quantity_required', sa.Float(), nullable=True))
    op.add_column('shopping_order_items', sa.Column('uom_stock_id', sa.String(length=5), nullable=True))
    op.create_index(op.f('ix_shopping_order_items_material_id'), 'shopping_order_items', ['material_id'], unique=False)
    op.drop_constraint('shopping_order_items_quantity_uom_fkey', 'shopping_order_items', type_='foreignkey')
    op.create_foreign_key(None, 'shopping_order_items', 'units_of_measures', ['uom_stock_id'], ['uom'])
    op.create_foreign_key(None, 'shopping_order_items', 'inventories', ['inventory_id'], ['id'])
    op.drop_column('shopping_order_items', 'quantity')
    op.drop_column('shopping_order_items', 'titleEN')
    op.drop_column('shopping_order_items', 'quantity_uom')
    op.drop_column('shopping_order_items', 'titleDE')
    op.add_column('shopping_orders', sa.Column('place_id', sa.Integer(), nullable=True))
    op.add_column('shopping_orders', sa.Column('plan_date_end', sa.DateTime(timezone=True), nullable=True))
    op.add_column('shopping_orders', sa.Column('plan_date_start', sa.DateTime(timezone=True), nullable=True))
    op.add_column('shopping_orders', sa.Column('receipt_photo', sa.String(), nullable=True))
    op.create_foreign_key(None, 'shopping_orders', 'places', ['place_id'], ['id'])
    op.add_column('trade_items', sa.Column('title', sa.String(length=80), nullable=True))
    op.drop_column('trade_items', 'titleDE')
    op.drop_column('users', 'default_consumption_plan_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('default_consumption_plan_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_default_consumption_plan_id_fkey', 'users', 'consumption_plans', ['default_consumption_plan_id'], ['id'])
    op.create_unique_constraint('users_default_consumption_plan_id_key', 'users', ['default_consumption_plan_id'])
    op.add_column('trade_items', sa.Column('titleDE', sa.VARCHAR(length=80), autoincrement=False, nullable=True))
    op.drop_column('trade_items', 'title')
    op.drop_constraint(None, 'shopping_orders', type_='foreignkey')
    op.drop_column('shopping_orders', 'receipt_photo')
    op.drop_column('shopping_orders', 'plan_date_start')
    op.drop_column('shopping_orders', 'plan_date_end')
    op.drop_column('shopping_orders', 'place_id')
    op.add_column('shopping_order_items', sa.Column('titleDE', sa.VARCHAR(length=80), autoincrement=False, nullable=True))
    op.add_column('shopping_order_items', sa.Column('quantity_uom', sa.VARCHAR(length=5), autoincrement=False, nullable=True))
    op.add_column('shopping_order_items', sa.Column('titleEN', sa.VARCHAR(length=80), autoincrement=False, nullable=True))
    op.add_column('shopping_order_items', sa.Column('quantity', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'shopping_order_items', type_='foreignkey')
    op.drop_constraint(None, 'shopping_order_items', type_='foreignkey')
    op.create_foreign_key('shopping_order_items_quantity_uom_fkey', 'shopping_order_items', 'units_of_measures', ['quantity_uom'], ['uom'])
    op.drop_index(op.f('ix_shopping_order_items_material_id'), table_name='shopping_order_items')
    op.drop_column('shopping_order_items', 'uom_stock_id')
    op.drop_column('shopping_order_items', 'quantity_required')
    op.drop_column('shopping_order_items', 'quantity_purchased')
    op.drop_column('shopping_order_items', 'inventory_id')
    op.add_column('places', sa.Column('titleDE', sa.VARCHAR(length=80), autoincrement=False, nullable=True))
    op.add_column('material_forecasts', sa.Column('consumption_plan_item_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('material_forecasts_consumption_plan_item_id_fkey', 'material_forecasts', 'consumption_plan_items', ['consumption_plan_item_id'], ['id'])
    op.create_table('consumption_plans',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('consumption_plans_id_seq'::regclass)"), nullable=False),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='consumption_plans_creator_id_fkey'),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], name='consumption_plans_user_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='consumption_plans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('consumption_plan_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('consumption_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('material_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('quantity', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('plan_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('period', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('day_in_month', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('weekday', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('inventory_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['consumption_plan_id'], ['consumption_plans.id'], name='consumption_plan_items_consumption_plan_id_fkey'),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.id'], name='consumption_plan_items_inventory_id_fkey'),
    sa.ForeignKeyConstraint(['material_id'], ['materials.id'], name='consumption_plan_items_material_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='consumption_plan_items_pkey')
    )
    # ### end Alembic commands ###
